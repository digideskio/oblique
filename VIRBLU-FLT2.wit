# flight = sectors, farebasis, faretype, currency, price
# sector = airline, airlcode, flightno, origin, dest, deptime, arrtime
# time = (year, month, date, hour, minute)
> FARE0:
    global flight, corig, cdest
    import sys
    sys.stderr.write('%s\n' % label)
    sectors = []
    flight = [sectors, None, None, None, None, []]
    year = int(label[0:4])
    month = int(label[4:6])
    day = int(label[6:8])
    airlcode = label[8:10]
    flightno = label[10:16].strip()
    origin = label[16:19]
    dest = label[19:22]
    sectors.append([None, airlcode, flightno, origin, dest, None, None])
    airlcode = label[22:24]
    if airlcode.strip():
        flightno = label[24:30].strip()
        origin = label[30:33]
        dest = label[33:36]
        sectors.append([None, airlcode, flightno, origin, dest, None, None])
        airlcode = label[36:38]
        if airlcode.strip():
            flightno = label[38:44].strip()
            origin = label[44:47]
            dest = label[47:50]
            sectors.append([None, airlcode, flightno, origin, dest, None, None])
    corig = label[50:52]
    cdest = label[52:54]   # not destinations, just repeats corig
    #farebasis = label[54:57]
    #baseprice = label[56:62]
    depy = int(label[64:68])
    depm = int(label[68:70])
    depd = int(label[70:72])
    deph = int(label[72:74])
    depx = int(label[74:76])
    sectors[0][5] = (depy, depm, depd, deph, depx)
    arry = int(label[76:80])
    arrm = int(label[80:82])
    arrd = int(label[82:84])
    arrh = int(label[84:86])
    arrx = int(label[86:88])
    sectors[-1][6] = (arry, arrm, arrd, arrh, arrx)
    flight[2] = label[88:112].strip()

FARE0 '(<br>&nbsp; Flight [^<]+<br>&nbsp; <font size=1>'
'<i>Operated by #[^<]+#</i></font>)+' FARE1:
    tags = _.tags[1:-1]
    sectors = flight[0]
    secno = 0
    while tags:
        airline = _[tags[0]:tags[1]]
        sectors[secno][0] = airline
        secno += 1
        tags = tags[2:]

FARE1 '<font size=1 class=label>Depart</font>' FARE2:
    pass

FARE2 '<small>#[[:digit:]]{1,2}#:#[[:digit:]]{2}#(am)?<br>'
'#[[:digit:]]{1,2}#:#[[:digit:]]{2}#(am)?</small>' FARE3:
    landingh = int(_.range(1,2))
    landingm = int(_.range(3,4))
    takeoffh = int(_.range(5,6))
    takeoffm = int(_.range(7,8))
    sectors = flight[0]
    year, month, date, hour = sectors[0][5][:4]
    if hour > 12 and landingh < 12:
        year, month, date = sectors[-1][6][:3]
        sectors[0][6] = (year, month, date, landingh, landingm)
        sectors[-1][5] = (year, month, date, takeoffh, takeoffm)
    else:
        sectors[0][6] = (year, month, date, landingh, landingm)
        if takeoffh < landingh:
            year, month, date = sectors[-1][6][:3]
        sectors[-1][5] = (year, month, date, takeoffh, takeoffm)

FARE2 '<font size=1 class=label>Arrive</font>' FARE3:
    pass

FARE3 '<b>Total Cost of Flight</b></font></td>[[:space:]]+<td></td>'
'[[:space:]]+<td nowrap><font class=label><b>[^<]*</b></font></td>'
'[[:space:]]+<td align=right nowrap><font class=label>[[:space:]]+'
'<b>#[0-9]+#\.#[0-9]{2}# #[A-Z]{3}#</b></font></td>' >:
    # add credit card payment surcharge of $2/passenger/flight
    # VB only accepts credit cards
    dollars = int(_.range(1,2)) + 2
    cents = int(_.range(3,4))
    currency = _.range(5,6)
    price = dollars * 100 + cents
    flight[3] = currency
    flight[4] = price
    # work out taxes
    if corig == 'AU':
        if cdest == 'AU':
            # GST on full price including taxes
            flight[5].append(('AUD', price / 11))
        else:
            # passenger service charge (departure tax)
            flight[5].append(('AUD', 3800))
    elif corig == 'NZ':
        if cdest == 'NZ':
            pass
        else:
            # NZ departure tax is paid at airport
            # flight[5].append(('NZD', 2500))
            pass
    sectors = flight[0]
    if sectors[-1][4] in ('ADL', 'SYD'):
        # jet landings in Adelaide and Sydney pay noise levy of $3.58
        # all VB flights are jets
        # ??? what about transit passengers?
        flight[5].append(('AUD', 358))

